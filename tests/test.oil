OSEK OSEK {

    OS ExampleOS {
        STATUS = EXTENDED;
        ERRORHOOK = TRUE;
        PRETASKHOOK = FALSE;
        POSTTASKHOOK = FALSE;
        STARTUPHOOK = TRUE;
        SHUTDOWNHOOK = FALSE;
        USERESSCHEDULER = FALSE;
    };

    APPMODE = AppMode1;

    TASK TaskStart {
        PRIORITY = 1;
        ACTIVATION = 1;
        STACK = 512;
        TYPE = BASIC;
        SCHEDULE = FULL;
        AUTOSTART = TRUE {
            APPMODE = AppMode1;
        }
    };

    TASK TaskA {
        PRIORITY = 1;
        ACTIVATION = 1;
        STACK = 512;
        TYPE = BASIC;
        SCHEDULE = FULL;
        AUTOSTART = FALSE;
    };

    TASK TaskB {
        PRIORITY = 2;
        ACTIVATION = 1;
        STACK = 512;
        TYPE = BASIC;
        SCHEDULE = FULL;
        AUTOSTART = FALSE;
    };

    TASK TaskC {
        PRIORITY = 2;
        ACTIVATION = 10;
        STACK = 512;
        TYPE = BASIC;
        SCHEDULE = FULL;
        AUTOSTART = FALSE;
    };

    TASK TaskD {
        PRIORITY = 1;
        ACTIVATION = 10;
        STACK = 512;
        TYPE = EXTENDED;
        SCHEDULE = FULL;
        AUTOSTART = FALSE;
        EVENT = EventP;
    };

    EVENT EventP {
        MASK = AUTO;
    };

    COUNTER CounterA {
        MINCYCLE = 10;
        MAXALLOWEDVALUE = 19;
        TICKSPERBASE = 10;
        COUNTERTYPE = SOFTWARE;
    };

    ALARM epAlarmA {
        COUNTER = CounterA;
        ACTION = EPCALLBACK {
            ALARMCALLBACKNAME = "ExpiryPointCallbackFuncA";
        };
        AUTOSTART =FALSE;
    };

    SCHEDULETABLE ScheduleTableA{
        DURATION = 20;
        INITOFFSET = 2;
        FINALDELAY = 6;
        SYNCSTRATEGY = NONE;
        REPEATING = TRUE;
        COUNTER = CounterA;
        CALLBACKALARM = epAlarmA;
        EXPIRYPOINT EP1 {
            OFFSET = 2;
            MAXSHORTEN = 0;
            MAXLENGTHEN = 0;
            TASKACTIVATION = TaskA, TaskB;
        };
        EXPIRYPOINT EP2 {
            OFFSET = 4;
            MAXSHORTEN = 0;
            MAXLENGTHEN = 0;
            EVENTSETTING E1 {
                TASK = TaskD;
                EVENT = EventP;
            }
        };
        AUTOSTART =FALSE;
    };

};
